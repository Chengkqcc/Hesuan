<template>
	<div class="backge" >
		<view class="u-page">
			<view class="u-demo-block">
                <text class="u-demo-block__title">标题</text>
                <div class="count1">{{asktitle.length}}/20</div>
                <view class="form-item-content">
					<input v-model="asktitle" :maxlength='50' class="input" placeholder="请输入标题"
						:readonly="isTrue" />
				</view>
                <text class="u-demo-block__title">类型</text>
                <view class="form-item-content" @click="showSex=true">
					<u--input
						v-model="type"
						disabled
						disabledColor="#ffffff"
						placeholder="请选择建言献策类型"
                        suffixIcon="arrow-right"
                        class="input"
						border="none"
				></u--input>
				</view>
                <text class="u-demo-block__title" style="margin-top: 30upx;">图片（选填，提供问题截图）最多3张</text>
				<view class="u-demo-block__content" style="margin-top: 10upx;">
					<u-upload
						:fileList="fileList5"
						@afterRead="afterRead"
						@delete="deletePic"
						name="5"
						multiple
						imageMode='aspectFill'
						width='200rpx' height='200rpx' 
						:maxCount="3"
						:previewFullImage="true"
					>
					<image src="../../static/upload_img.png" style="width: 200rpx;height: 200rpx;"></image>
					</u-upload>
				</view>
				<text class="u-demo-block__title">问题</text>
				<div class="count">{{askContent.length}}/200</div>
				<u--textarea v-model="askContent" height="216upx" border="none" :maxlength='200' placeholder="请输入内容"></u--textarea>
				
			</view>
			
			<view class="u-demo-block">
				<view class="u-demo-block__content demo_div"
					style=" padding: 0 20px 20px 20px; flex-direction: column;align-items: stretch;flex-wrap: nowrap;">
					<view>
						<u-button text="提交" @click="submitCard(true)" size="large" type="primary"></u-button>
					</view>
				</view>
			</view>
            <u-action-sheet
				:show="showSex"
				:actions="actions"
				@close="showSex = false"
				@select="sexSelect"
		>
		</u-action-sheet>
			<u-toast ref="uToast"></u-toast>
		</view>
	</div>
</template>

<script>
	import {
		getOpenId,
		getCompanyByHsCodeV2,
		getCardDetail,
		getUploadToken,
		addFead,
		sqmy,
		dicjyxc
	} from '../../common/api.js'
	import config from '@/common/config'
	export default {
		data() {
			return {
				value2: '',
				openId: '',
				qiniuToken: '',
				actingType: "2",
				lockType: true,
                showSex:false,
				show3: false,
				qiniuToken: '',
				userInfo: {},
				cardImgData: {},
				content: '证件信息未识别，现在去手动填写信息？',
				askContent: '',
                asktitle:'',
				loading: false,
                isTrue:false,
				fileList5: [],
				frontImg: '',
				base64: '',
                type:'',
				typeValue:'',
				reverseImg: '',
				hsCode: '',
                actions: [
                    {
                        name: '办事效率',
                    },
                    {
                        name: '政策效果',
                    },
                    {
                        name: '服务态度',
                    },
                    {
                        name: '公共管理',
                    }
			    ],
				// action:[],
				background1: "https://admin.xzlglobal.com/hsfile/bg_mp.jpg",
			};
		},

		onShow() {
			console.log('身份信息',this.$store.state.userInfo)
			uni.hideShareMenu()
			var that = this
			this.getQiniuToken()
			this.dict()
			//根据code获取openid等信息
			wx.login({
				success: function(res) {
					if (res.code) {
						//发起网络请求
						console.log('获取用户成功！' + res.code)
						that.getOpenId(res.code)
					} else {
						console.log('获取用户登录态失败！' + res.errMsg)
					}
				}
			});
		},
		onLoad(option) {
			if (option != null && option != "") {
				var data = option.actingType; // 字符串转对象
				if (data) {
					this.actingType = data
				}
				if(option.hsCode!=null && option.hsCode!=''){
					this.hsCode = option.hsCode
				}
			}

		},
		methods: {
            //选择
            sexSelect(e){
                console.log(e)
                this.type = e.name
				this.typeValue = e.index
            },
			//字典
			dict(){
				dicjyxc().then(res=>{
					// console.log(res)
					let n = []
					// this.action = res
					res.forEach(item=>{
						if(item.status== 0){
							let i = {}
							i.name = item.dictLabel
							i.index = item.dictValue
							n.push(i)
						}
					})
					this.actions = n
				})
			},
			//获取用户信息
			async getOpenId(code) {
				var that = this
				await getOpenId(code).then(res => {
					if (res && JSON.stringify(res) !== "{}") {
						that.openId = res
						uni.setStorageSync('openId', res);
					}
				}).catch(err => {

				})
			},
			afterRead(event) {
				// 当设置 mutiple 为 true 时, file 为数组格式，否则为对象格式
				let lists = [].concat(event.file)
				let fileListLen = this[`fileList${event.name}`].length
				lists.map((item) => {
					this[`fileList${event.name}`].push({
						...item,
						status: 'uploading',
						message: '上传中'
					})
				})
				for (let i = 0; i < lists.length; i++) {
					this.uploadFilePromise(lists[i].url, event.name).then(res => {
						let item = this[`fileList${event.name}`][fileListLen]
						this[`fileList${event.name}`].splice(fileListLen, 1, Object.assign(item, {
							status: 'success',
							message: '',
							url: res
						}))
						fileListLen++
					})
					
				}
			},
			async getQiniuToken() { //获取七牛的uptoken
				var that = this
				getUploadToken().then(res => {
					if (res && JSON.stringify(res) !== "{}") {
						this.qiniuToken = res
					}
				})
			
			},
			uploadFilePromise(url, name) {
				var that = this
				return new Promise((resolve, reject) => {
					let a = uni.uploadFile({
						url: 'https://upload-z1.qiniup.com/',
						// url: config.baseUrl + '/wechat/common/upload',
						filePath: url,
						name: 'file',
						formData: {
							token: that.qiniuToken,
						},
						success: (res) => {
							setTimeout(() => {
								if (res.data) {
									var imgData = JSON.parse(res.data);
									// if (name == 5) {
									// 	that.frontImg = config.qiniuUrl + imgData.key
									// } 
									resolve(config.qiniuUrl + imgData.key)
								}
			
							}, 1000)
						}
					});
				})
			},
			// 删除图片
			deletePic(event) {
				this[`fileList${event.name}`].splice(event.index, 1)
			},
			openLoadingPage() {
				this.loadingPageData = {
					loadingText: '',
					image: '',
					loadingMode: '',
					bgColor: '#ffffff',
				}
				// 自定义背景色
				this.loadingPageData.loadingMode = 'spinner'
				this.loadingPageData.bgColor = 'rgba(0, 0, 0, 0.4)'
				this.loadingPageData.loadingText = "加载中"
				this.loadingPageData.color = '#eee',
					this.loading = true
				setTimeout(() => {
					this.loading = false
				}, 1000)
			},
			/**
			 * 判断字符只能为字母或数字
			 * @param str
			 * @returns {boolean}
			 */
			containSpecial(s) {
				return /^[\da-z]+$/i.test(s);
			},
			/**
			 * @param {Boolean} type 是否有身份证 
			 */
			validityPeopleForm() {
			    if (!this.askContent) {
					uni.$u.toast('请输入反馈内容');
					return false
			    }
			    return true
			},
			async submitCard(type) {
				// if (!this.validityPeopleForm()) return
				if (!this.validityPeopleForm()){
					setTimeout(function () {
					}, 2000);
					return false
				} 
				var that = this
				const params = {
					content: this.askContent,
					title:this.asktitle,
					sqmyType:2,
					contentType:this.typeValue,
					publisher:this.$store.state.userInfo.name,
					publisherPhone:this.$store.state.userInfo.phone,
					companyName:this.$store.state.userInfo.companyName,
					companyId:this.$store.state.userInfo.companyId,
				}
				that.fileList5.forEach((item, index) => {
					if (index === 0) {
						params.pictureInfo = item.url
					}
					if (index === 1) {
						params.pictureInfo =params.pictureInfo+','+item.url
					}
					if (index === 2) {
						params.pictureInfo = params.pictureInfo+','+item.url
					}
				})
				
				uni.showLoading({
					title: '提交中...',
					mask: true
				});
				
				sqmy(params, {
					custom: {
						toast: true,
						catch: true
					}
				}).then(res => {
					uni.showToast({
						title:'提交成功',
						icon: 'success',
						duration: 1000
					})
					setTimeout(() => {
						uni.navigateBack({
							delta: 1,
							success: () => {
							    let page = getCurrentPages().pop();  //跳转页面成功之后
							    page.onLoad();
							}
						});
					}, 1500)
				})
			},
			
			cancel() {
				this.show3 = false
				console.log('cancel');
			},
			close() {
				this.show3 = false
				console.log('close');
			},

			str2utf8(str) {
				var encoder = new TextEncoder('utf8');
				return encoder.encode(str);
			},
			scanCode() {
				var that = this
				//扫码
				uni.scanCode({
					//onlyFromCamera: true, //只能从相机中获取，不能从图片中获取
					success: function(res) { //获取扫码结果
						that.openLoadingPage()
						if (res.result && res.result.length >= 17) {
							var dataStr = res.result
							console.log(dataStr)
							var str = dataStr.split('(')
							if (str.length >= 1) {
								that.hsCode = dataStr.split('(')[0]
							} else {
								uni.showToast({
									title: '无效二维码，扫码正确的核酸码',
									icon: 'none',
									duration: 2000
								});
							}
						} else {
							uni.showToast({
								title: '无效二维码，扫码正确的核酸码',
								icon: 'none',
								duration: 2000
							});
						}
					}
				});
			}
		}
	}
</script>

<style lang="scss" scoped>
	.backge {
		width: calc(100%);
		height: 100vh;
		background-color: #F1F4F7;
		.u-page {
			padding: 40upx 30upx 0 30upx;
			position: relative;
		}
	}
    .form-action{
        // width: 452upx;
        border-radius: 8upx;
        background-color: #fff;
        margin-left: 206upx;
        padding: 22upx 32upx;
        box-sizing: border-box;
    }
    .form-item-content {
        border: 1px solid rgb(197, 197, 197);
        height: 90rpx;
        margin-top: 15rpx;
        padding-left: 20rpx;
        background-color: #fff;
        .input {
            height: 90rpx;
        }
    }
	/deep/.u-input--square{
		height: 50px;
	}
	.img {
		width: 680upx;
		height: 400upx;
	}

	.u-demo-block__content {
		flex-direction: row;
		flex-wrap: wrap;
		align-items: center;
	}
	.u-demo-block__title{
		font-size: 30upx;
		font-family: PingFangSC-Regular, PingFang SC;
		font-weight: 400;
		color: #333333;
		line-height: 42px;
	}
    .count1{
        position: absolute;
		top: 15upx;
		right: 28upx;
		font-size: 30upx;
		font-family: PingFangSC-Regular, PingFang SC;
		font-weight: 400;
		color: #666666;
		line-height: 42upx
    }
	.count {
		position: absolute;
		top: 768upx;
		right: 28upx;
		font-size: 30upx;
		font-family: PingFangSC-Regular, PingFang SC;
		font-weight: 400;
		color: #666666;
		line-height: 42upx
	}
	.demo_div {
		left: 0;
		position: fixed;
		bottom: 0;
		width: 100%;
	}
	.u-demo-block{
		// background-color: #ffffff;
		// border-radius: 7px;
		padding: 0 20upx 30upx;
		.userinfo{
			background-color: #ffffff;
			border-radius: 7px;
			padding: 34upx;
		}
		.user_line{
			display: flex;
			flex-direction: row;
			align-items: center;
			line-height: 70upx;
			justify-content: space-between;
			.label-name{
				font-size: 40upx;
				// font-weight: 600;
			}
			.content{
				font-size: 40upx;
				color: #666666;
				// font-weight: 600;
			}
            
		}
		
	}
</style>
